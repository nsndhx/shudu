<!-- Generated by JetBrains ReSharper 2023.1.3 --><html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Code Issues in 'test_shudu'</title>
    <style>
          dt { float: left; margin-right: 0.5em; }
          dd { }
        </style>
  </head>
  <body>
    <div>
      <h1>Solution test_shudu.sln</h1>
    <div>
        <h2>Project test_shudu</h2>
        <dl>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">3</span></dt>
          <dd>Typo in comment: 'GETOPT'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">25</span></dt>
          <dd>Typo in comment: 'BOBBLAIR'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">25</span></dt>
          <dd>Typo in comment: 'AUSVM'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">26</span></dt>
          <dd>Typo in comment: 'bobblair'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">29</span></dt>
          <dd>Typo in comment: 'JOHHQ'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">29</span></dt>
          <dd>Typo in comment: 'RALVM'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">30</span></dt>
          <dd>Typo in comment: 'johnq'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">35</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">37</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">38</span></dt>
          <dd>Typo in comment: 'opstring'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">43</span></dt>
          <dd>Typo in comment: 'opstring'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">46</span></dt>
          <dd>Typo in comment: 'optarg'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">47</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">49</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">49</span></dt>
          <dd>Typo in comment: 'optind'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">50</span></dt>
          <dd>Typo in comment: 'optind'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">51</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">53</span></dt>
          <dd>Typo in comment: 'nonoption'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">54</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">58</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">59</span></dt>
          <dd>Typo in comment: 'opstring'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">60</span></dt>
          <dd>Typo in comment: 'opterr'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">71</span></dt>
          <dd>Include guard is not found at the beginning of a header file</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">72</span></dt>
          <dd>Typo in comment: 'strchr'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">75</span></dt>
          <dd>Typo in comment: 'getopt'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">76</span></dt>
          <dd>Typo in identifier: 'optarg'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">76</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">77</span></dt>
          <dd>Typo in identifier: 'optind'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">78</span></dt>
          <dd>Typo in identifier: 'opterr'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">82</span></dt>
          <dd>Declaration uses identifier '_next_char', which is reserved in the global namespace [bugprone-reserved-identifier]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">82</span></dt>
          <dd>Macro argument should be enclosed in parentheses [bugprone-macro-parentheses]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">84</span></dt>
          <dd>Definition of function 'int getopt(int argc, char* argv[], char* opstring)' in a header file should have an 'inline' specifier</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">84</span></dt>
          <dd>Typo in identifier: 'opstring'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">86</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">87</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">91</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">99</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">103</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">115</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">116</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">123</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">124</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">133</span></dt>
          <dd>Typo in comment: 'opterr'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">136</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">136</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">138</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">142</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">143</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">144</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">144</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">159</span></dt>
          <dd>Typo in comment: 'optarg'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">164</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">165</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">165</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">168</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\getopt.h:<span class="line">172</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">11</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;std::vector&lt;char&gt;&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">13</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;char&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">18</span></dt>
          <dd>Local variable 'check' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">28</span></dt>
          <dd>Parameter 'filePath' is copied for each invocation, consider passing by const reference</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">28</span></dt>
          <dd>The parameter 'filePath' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">33</span></dt>
          <dd>Variable 'data' can be moved to inner scope</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">41</span></dt>
          <dd>Use emplace_back instead of push_back [modernize-use-emplace]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">45</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">59</span></dt>
          <dd>Parameter 'boards' is copied for each invocation, consider passing by const reference</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">61</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;std::vector&lt;std::vector&lt;char&gt;&gt;&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">63</span></dt>
          <dd>Use range-based for loop instead [modernize-loop-convert]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">63</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;std::vector&lt;char&gt;&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">65</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;char&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">75</span></dt>
          <dd>Parameter 'digCount' is copied for each invocation, consider passing by const reference</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">79</span></dt>
          <dd>Local variable 'cnt' is reassigned in all paths before being read</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.cpp:<span class="line">86</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.h:<span class="line">4</span></dt>
          <dd>Include guard is not found at the beginning of a header file</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\helpFunc.h:<span class="line">6</span></dt>
          <dd>Variable 'data' can be made constexpr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\main.cpp:<span class="line">16</span></dt>
          <dd>Local variable 'op' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">12</span></dt>
          <dd>Typo in identifier: 'compelete'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">12</span></dt>
          <dd>Local variable 'compeleteBoardCount' is never used</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">16</span></dt>
          <dd>Narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">16</span></dt>
          <dd>C-style cast is used instead of a C++ cast</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">16</span></dt>
          <dd>Cast from 'const char *' to 'char *' drops const qualifier [clang-diagnostic-cast-qual]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">25</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">29</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">34</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">38</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">44</span></dt>
          <dd>Function 'strtok' is deprecated, reason: 'This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">44</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">47</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">48</span></dt>
          <dd>Function 'strtok' is deprecated, reason: 'This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">48</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">48</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">53</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">58</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">67</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">68</span></dt>
          <dd>Unreachable code</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">81</span></dt>
          <dd>Local variable 'num' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">81</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">85</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">89</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">98</span></dt>
          <dd>Declaration and assignment can be joined</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">100</span></dt>
          <dd>Function 'access' is deprecated, reason: 'The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _access. See online help for details.'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">103</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">106</span></dt>
          <dd>Local variable 'filePath' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">108</span></dt>
          <dd>Use range-based for loop instead [modernize-loop-convert]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">108</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;std::vector&lt;std::vector&lt;char&gt;&gt;&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">110</span></dt>
          <dd>Local variable 'result' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">121</span></dt>
          <dd>Declaration and assignment can be joined</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">121</span></dt>
          <dd>Declaration and assignment can be joined</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">124</span></dt>
          <dd>Declaration and assignment can be joined</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">126</span></dt>
          <dd>Local variable 'solution_count' is reassigned in all paths before being read</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">126</span></dt>
          <dd>Variable 'solution_count' can be moved to inner scope</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">134</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">137</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">142</span></dt>
          <dd>Assigned value is never used</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">148</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">154</span></dt>
          <dd>Declaration and assignment can be joined</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">156</span></dt>
          <dd>Function 'strcpy' is deprecated, reason: 'This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">157</span></dt>
          <dd>Function 'strtok' is deprecated, reason: 'This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">157</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">160</span></dt>
          <dd>'atoi' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">161</span></dt>
          <dd>Function 'strtok' is deprecated, reason: 'This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">161</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">161</span></dt>
          <dd>Zero constant can be replaced with nullptr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">191</span></dt>
          <dd>Typo in comment: 'cout'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">191</span></dt>
          <dd>Typo in comment: 'endl'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">192</span></dt>
          <dd>Result of a postfix operator is discarded, consider replacing it with a prefix operator</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">198</span></dt>
          <dd>Function 'print_m' could be declared with attribute 'noreturn' [clang-diagnostic-missing-noreturn]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">200</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">205</span></dt>
          <dd>Function 'print_r' could be declared with attribute 'noreturn' [clang-diagnostic-missing-noreturn]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">207</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">212</span></dt>
          <dd>Function 'print_u' could be declared with attribute 'noreturn' [clang-diagnostic-missing-noreturn]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.cpp:<span class="line">214</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\parse.h:<span class="line">4</span></dt>
          <dd>Include guard is not found at the beginning of a header file</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">2</span></dt>
          <dd>Typo in comment: 'Shudu'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">14</span></dt>
          <dd>Parameter 'board' can be made reference to const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">15</span></dt>
          <dd>Local copy 'obj' of the variable 'board' is never modified; consider avoiding the copy [performance-unnecessary-copy-initialization]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">15</span></dt>
          <dd>Local variable 'obj' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">31</span></dt>
          <dd>Use emplace_back instead of push_back [modernize-use-emplace]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">34</span></dt>
          <dd>Local variable 'digit' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">45</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;std::pair&lt;int, int&gt;&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">49</span></dt>
          <dd>Local variable 'i' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">50</span></dt>
          <dd>Local variable 'j' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">57</span></dt>
          <dd>Narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">57</span></dt>
          <dd>Implicit conversion loses integer precision: 'int' to 'char' [clang-diagnostic-implicit-int-conversion]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">67</span></dt>
          <dd>Use range-based for loop instead [modernize-loop-convert]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">73</span></dt>
          <dd>Parameter 'board' can be made reference to const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">78</span></dt>
          <dd>Local variable 'digit' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">89</span></dt>
          <dd>Member function can be made static</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">89</span></dt>
          <dd>Parameter 'board' can be made reference to const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">90</span></dt>
          <dd>Use range-based for loop instead [modernize-loop-convert]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">90</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;std::vector&lt;char&gt;&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">91</span></dt>
          <dd>Comparison of integers of different signs: 'int' and 'std::vector&lt;char&gt;::size_type' (aka 'unsigned long long') [clang-diagnostic-sign-compare]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">101</span></dt>
          <dd>Local variable 'row' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">103</span></dt>
          <dd>Narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">103</span></dt>
          <dd>Implicit conversion loses integer precision: 'int' to 'char' [clang-diagnostic-implicit-int-conversion]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">104</span></dt>
          <dd>Narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">104</span></dt>
          <dd>Implicit conversion loses integer precision: 'int' to 'char' [clang-diagnostic-implicit-int-conversion]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">105</span></dt>
          <dd>Narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">105</span></dt>
          <dd>Implicit conversion loses integer precision: 'int' to 'char' [clang-diagnostic-implicit-int-conversion]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">115</span></dt>
          <dd>Local variable 'x' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">115</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">116</span></dt>
          <dd>Local variable 'y' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">116</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">119</span></dt>
          <dd>Local variable 'tmp' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">133</span></dt>
          <dd>Member function can be made static</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">134</span></dt>
          <dd>Declaration shadows a field of 'Shudu' [clang-diagnostic-shadow]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">137</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">148</span></dt>
          <dd>Member function can be made static</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">149</span></dt>
          <dd>Local variable 'rand_tmp' can be made const</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.cpp:<span class="line">149</span></dt>
          <dd>Function is not thread safe [concurrency-mt-unsafe]</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">2</span></dt>
          <dd>Typo in comment: 'Shudu'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">4</span></dt>
          <dd>Include guard is not found at the beginning of a header file</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">4</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">5</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">6</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">7</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">9</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">10</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">11</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">12</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">14</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">15</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">16</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">17</span></dt>
          <dd>Possibly unused #include directive</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">21</span></dt>
          <dd>Variable 'N' can be made constexpr</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">24</span></dt>
          <dd>Typo in identifier: 'Shudu'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">37</span></dt>
          <dd>Typo in identifier: 'Shudu'</dd>
      <dt>C:\Users\lenovo\Desktop\last-windows\shudu.h:<span class="line">46</span></dt>
          <dd>Typo in comment: 'gitit'</dd>
    </dl>
      </div>
  </div>
  </body>
</html>